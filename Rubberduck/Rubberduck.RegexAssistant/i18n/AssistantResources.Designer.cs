//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.RegexAssistant.i18n {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AssistantResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AssistantResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.RegexAssistant.i18n.AssistantResources", typeof(AssistantResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the ASCII character CR.
        /// </summary>
        internal static string AtomDescription_CarriageReturn {
            get {
                return ResourceManager.GetString("AtomDescription_CarriageReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any of the following characters: {0}.
        /// </summary>
        internal static string AtomDescription_CharacterClass {
            get {
                return ResourceManager.GetString("AtomDescription_CharacterClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any character that is not one of: {0}.
        /// </summary>
        internal static string AtomDescription_CharacterClass_Inverted {
            get {
                return ResourceManager.GetString("AtomDescription_CharacterClass_Inverted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any digit. Equivalent to &quot;[0-9]&quot;.
        /// </summary>
        internal static string AtomDescription_Digit {
            get {
                return ResourceManager.GetString("AtomDescription_Digit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any character.
        /// </summary>
        internal static string AtomDescription_Dot {
            get {
                return ResourceManager.GetString("AtomDescription_Dot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the &quot;Form-Feed&quot;-character.
        /// </summary>
        internal static string AtomDescription_FormFeed {
            get {
                return ResourceManager.GetString("AtomDescription_FormFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches a capture group &apos;{0}&apos;.
        /// </summary>
        internal static string AtomDescription_Group {
            get {
                return ResourceManager.GetString("AtomDescription_Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the horizontal &quot;Tab&quot;-character.
        /// </summary>
        internal static string AtomDescription_HTab {
            get {
                return ResourceManager.GetString("AtomDescription_HTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches literal &apos;{0}&apos;.
        /// </summary>
        internal static string AtomDescription_Literal_ActualLiteral {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_ActualLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exactly matches what the capture group at position {0} matched again.
        /// </summary>
        internal static string AtomDescription_Literal_Backreference {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_Backreference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the escaped literal {0}.
        /// </summary>
        internal static string AtomDescription_Literal_EscapedLiteral {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_EscapedLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the Hexadecimal ASCII value {0}.
        /// </summary>
        internal static string AtomDescription_Literal_HexCodepoint {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_HexCodepoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the Octal ASCII value {0}.
        /// </summary>
        internal static string AtomDescription_Literal_OctalCodepoint {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_OctalCodepoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the Unicode Codepoint {0}.
        /// </summary>
        internal static string AtomDescription_Literal_UnicodePoint {
            get {
                return ResourceManager.GetString("AtomDescription_Literal_UnicodePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the ASCII character LF, also known as newline.
        /// </summary>
        internal static string AtomDescription_Newline {
            get {
                return ResourceManager.GetString("AtomDescription_Newline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches non-digits. Equivalent to &quot;[^\d]&quot;.
        /// </summary>
        internal static string AtomDescription_NonDigit {
            get {
                return ResourceManager.GetString("AtomDescription_NonDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches non-whitespace characters. Equivalent to &quot;[^\s]&quot;.
        /// </summary>
        internal static string AtomDescription_NonWhitespace {
            get {
                return ResourceManager.GetString("AtomDescription_NonWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensures that the current position is at a &quot;non-word-boundary&quot;.
        /// </summary>
        internal static string AtomDescription_NonWordBoundary {
            get {
                return ResourceManager.GetString("AtomDescription_NonWordBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches &quot;non-word characters&quot;. Equivalent to &quot;[^\w]&quot;.
        /// </summary>
        internal static string AtomDescription_NonWordCharacter {
            get {
                return ResourceManager.GetString("AtomDescription_NonWordCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches the vertical &quot;Tab&quot;-character.
        /// </summary>
        internal static string AtomDescription_VTab {
            get {
                return ResourceManager.GetString("AtomDescription_VTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any whitespace character. Equivalent to &quot;[ \t\r\n\v\f]&quot;.
        /// </summary>
        internal static string AtomDescription_Whitespace {
            get {
                return ResourceManager.GetString("AtomDescription_Whitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensures that the current position is at a &quot;word boundary&quot;.
        /// </summary>
        internal static string AtomDescription_WordBoundary {
            get {
                return ResourceManager.GetString("AtomDescription_WordBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches any &quot;word character&quot;. Equivalent to &quot;[a-zA-Z_0-9]&quot;.
        /// </summary>
        internal static string AtomDescription_WordCharacter {
            get {
                return ResourceManager.GetString("AtomDescription_WordCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches one of {0} alternatives.
        /// </summary>
        internal static string ExpressionDescription_AlternativesExpression {
            get {
                return ResourceManager.GetString("ExpressionDescription_AlternativesExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches literal sequence.
        /// </summary>
        internal static string ExpressionDescription_ConcatenatedExpression {
            get {
                return ResourceManager.GetString("ExpressionDescription_ConcatenatedExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse &apos;{0}&apos; as literal. Check your input, please.
        /// </summary>
        internal static string ExpressionDescription_ErrorExpression {
            get {
                return ResourceManager.GetString("ExpressionDescription_ErrorExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $ ensures all characters of the string are consumed.
        /// </summary>
        internal static string PatternDescription_AnchorEnd {
            get {
                return ResourceManager.GetString("PatternDescription_AnchorEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $ ensures that the line ended or all characters of the input have been consumed.
        /// </summary>
        internal static string PatternDescription_AnchorEnd_GlobalEnabled {
            get {
                return ResourceManager.GetString("PatternDescription_AnchorEnd_GlobalEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ^ ensures we are at the beginning of the string that&apos;s to be matched.
        /// </summary>
        internal static string PatternDescription_AnchorStart {
            get {
                return ResourceManager.GetString("PatternDescription_AnchorStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ^ ensures that the matcher starts at the beginning of a line.
        /// </summary>
        internal static string PatternDescription_AnchorStart_GlobalEnabled {
            get {
                return ResourceManager.GetString("PatternDescription_AnchorStart_GlobalEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All matches ignore the case (upper or lower) of literals.
        /// </summary>
        internal static string PatternDescription_IgnoreCase {
            get {
                return ResourceManager.GetString("PatternDescription_IgnoreCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to at least once.
        /// </summary>
        internal static string Quantifer_Plus {
            get {
                return ResourceManager.GetString("Quantifer_Plus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to any number of times.
        /// </summary>
        internal static string Quantifier_Asterisk {
            get {
                return ResourceManager.GetString("Quantifier_Asterisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to between {0} and {1} times.
        /// </summary>
        internal static string Quantifier_ClosedRange {
            get {
                return ResourceManager.GetString("Quantifier_ClosedRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exactly {0} times.
        /// </summary>
        internal static string Quantifier_Exact {
            get {
                return ResourceManager.GetString("Quantifier_Exact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exactly once.
        /// </summary>
        internal static string Quantifier_None {
            get {
                return ResourceManager.GetString("Quantifier_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to at least {0} times.
        /// </summary>
        internal static string Quantifier_OpenRange {
            get {
                return ResourceManager.GetString("Quantifier_OpenRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to at most once.
        /// </summary>
        internal static string Quantifier_Optional {
            get {
                return ResourceManager.GetString("Quantifier_Optional", resourceCulture);
            }
        }
    }
}
