Proof of concept PerfectXL en RubberduckVBA
===========================================

PerfectXL is een toepassing om risico’s in spreadsheets te vinden. We
lezen een spreadsheet uit, parsen de formules en voeren vervolgens
risico-analyse uit op deze input. Het is geschreven in pure managed code
in C\#.

We willen graag deze risico-analyse uitbreiden met de analyse van VBA
(Visual Basic for Applications) die in een spreadsheet aanwezig kan
zijn. In grote lijnen moet dit hetzelfde verlopen als de analyse die we
nu al hebben: content parsen en het analyseren van die parsetree.

Er bestaat een opensource-toepassing waarmee je VBA kunt parsen en
analyseren: RubberduckVBA (http://rubberduckvba.com/). Indien mogelijk
willen we deze toepassing koppelen aan PerfectXL. Hiertoe willen we
eerst een proof of concept maken om te kijken of het lukt om VBA-code in
te voeren in RubberduckVBA.

Het proof of concept:

1.  Is een commandline-applicatie
2.  Maakt gebruik van de source code van RubberduckVBA
3.  Leest een VBA-file als tekst vanaf de command-line
4.  Parst deze tekst via RubberduckVBA
5.  Geeft als output een lijst van namen van alle subs en functies in de
    gelezen VBA-code

Stap 4 is essentieel. Het heeft geen zin om middels eigen logica te
proberen het aantal subs/functies uit de VBA te halen. Uiteindelijk
willen we namelijk veel meer met RubberduckVBA dan alleen deze functie
over het aantal subs/functies.

Totaal te besteden tijd maximaal 4 uur. Als het niet lukt om in deze
tijd iets voor elkaar te krijgen, dan is een tussenresultaat ook goed.
Als het überhaupt niet gaat lukken, dan graag een korte toelichting
waarom dit niet kan werken.

*Roel van der Steen  
roel@infotron.nl 06-52372796  
22/05/2017*
