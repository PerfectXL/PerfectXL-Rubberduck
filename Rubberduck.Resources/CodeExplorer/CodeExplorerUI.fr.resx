<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CodeExplorerDockablePresenter_ParseStarted" xml:space="preserve">
    <value>{0} (analyse...)</value>
  </data>
  <data name="CodeExplorer_AddStdModuleText" xml:space="preserve">
    <value>Module &amp;standard (.bas)</value>
  </data>
  <data name="CodeExplorer_AddTestModuleText" xml:space="preserve">
    <value>Module de &amp;tests</value>
  </data>
  <data name="CodeExplorer_DisplayMemberNamesText" xml:space="preserve">
    <value>Afficher les &amp;noms</value>
  </data>
  <data name="CodeExplorer_DisplaySignaturesText" xml:space="preserve">
    <value>Afficher les &amp;signatures complètes</value>
  </data>
  <data name="CodeExplorer_FindAllImplementationsText" xml:space="preserve">
    <value>Trouver toutes les implémentations...</value>
  </data>
  <data name="CodeExplorer_FindAllReferencesText" xml:space="preserve">
    <value>Trouver toutes les références...</value>
  </data>
  <data name="CodeExplorer_RunAllTestsText" xml:space="preserve">
    <value>Exécuter tous les tests</value>
  </data>
  <data name="CodeExplorer_ShowDesignerToolTip" xml:space="preserve">
    <value>Ouvrir le mode création</value>
  </data>
  <data name="CodeExplorer_ShowFoldersToolTip" xml:space="preserve">
    <value>Activer/désactiver les dossiers</value>
  </data>
  <data name="CodeExplorerDockablePresenter_Caption" xml:space="preserve">
    <value>Explorateur</value>
  </data>
  <data name="CodeExplorer_Navigate" xml:space="preserve">
    <value>Na&amp;viguer</value>
  </data>
  <data name="CodeExplorer_New" xml:space="preserve">
    <value>&amp;Nouveau</value>
  </data>
  <data name="CodeExplorer_Refresh" xml:space="preserve">
    <value>R&amp;afraîchir</value>
  </data>
  <data name="CodeExplorer_DisplayModeToolTip" xml:space="preserve">
    <value>Affichage</value>
  </data>
  <data name="CodeExplorer_NewToolTip" xml:space="preserve">
    <value>Ajouter un module au projet actif</value>
  </data>
  <data name="CodeExplorer_AddClassModuleText" xml:space="preserve">
    <value>Module de classe (.cls)</value>
  </data>
  <data name="CodeExplorer_Import" xml:space="preserve">
    <value>Importer...</value>
  </data>
  <data name="CodeExplorer_CopyToolTip" xml:space="preserve">
    <value>Copier au presse-papier</value>
  </data>
  <data name="CodeExplorer_Export" xml:space="preserve">
    <value>Exporter...</value>
  </data>
  <data name="CodeExplorer_Print" xml:space="preserve">
    <value>Imprimer...</value>
  </data>
  <data name="CodeExplorer_Remove" xml:space="preserve">
    <value>Supprimer...</value>
  </data>
  <data name="CodeExplorer_Sort" xml:space="preserve">
    <value>Trier</value>
  </data>
  <data name="CodeExplorer_ShowSignaturesToolTip" xml:space="preserve">
    <value>Activer/désactiver les signatures</value>
  </data>
  <data name="CodeExplorer_CollapseSubnodesToolTip" xml:space="preserve">
    <value>Réduire l'arborescence</value>
  </data>
  <data name="CodeExplorer_OpenProjectProperties" xml:space="preserve">
    <value>Propriétés du projet</value>
  </data>
  <data name="CodeExplorer_ExpandSubnodesToolTip" xml:space="preserve">
    <value>Développer l'arborescence</value>
  </data>
  <data name="CodeExplorer_Indent" xml:space="preserve">
    <value>Indenter</value>
  </data>
  <data name="CodeExplorer_OpenDesigner" xml:space="preserve">
    <value>Ouvrir le designer</value>
  </data>
  <data name="CodeExplorer_ExportAll" xml:space="preserve">
    <value>Exporter le projet...</value>
  </data>
  <data name="CodeExplorer_SortStyle_ByType" xml:space="preserve">
    <value>Regrouper par type</value>
  </data>
  <data name="CodeExplorer_AddModule" xml:space="preserve">
    <value>Ajouter un module</value>
  </data>
  <data name="CodeExplorer_SortStyle_ByName" xml:space="preserve">
    <value>Par nom</value>
  </data>
  <data name="CodeExplorer_Open" xml:space="preserve">
    <value>Ouvrir</value>
  </data>
  <data name="CodeExplorer_AddFormText" xml:space="preserve">
    <value>Formulaire (.frm)</value>
  </data>
  <data name="CodeExplorer_AddTestModuleWithStubsText" xml:space="preserve">
    <value>Module de tests avec modèles</value>
  </data>
  <data name="CodeExplorer_SortStyle_ByCodeOrder" xml:space="preserve">
    <value>Tel que dans le module</value>
  </data>
  <data name="CodeExplorer_Add" xml:space="preserve">
    <value>Ajouter...</value>
  </data>
  <data name="CodeExplorer_ResourceFileText" xml:space="preserve">
    <value>Ressources</value>
  </data>
  <data name="ExportBeforeRemove_Caption" xml:space="preserve">
    <value>Exporter?</value>
  </data>
  <data name="ExportBeforeRemove_Prompt" xml:space="preserve">
    <value>Voulez-vous exporter le module '{0}' avant de le supprimer?</value>
  </data>
  <data name="CodeExplorer_AddMDIFormText" xml:space="preserve">
    <value>Formulaire MDI (.frm)</value>
  </data>
  <data name="CodeExplorer_AddPropertyPageText" xml:space="preserve">
    <value>Page de propriété (.pag)</value>
  </data>
  <data name="CodeExplorer_AddUserControlText" xml:space="preserve">
    <value>Contrôle Utilisateur (.ctl)</value>
  </data>
  <data name="CodeExplorer_AddUserDocumentText" xml:space="preserve">
    <value>Document Utilisateur (.dob)</value>
  </data>
  <data name="CodeExplorer_AddVBFormText" xml:space="preserve">
    <value>Formulaire (.frm)</value>
  </data>
  <data name="CodeExplorer_Rename" xml:space="preserve">
    <value>Renommer...</value>
  </data>
  <data name="CodeExplorer_SetAsStartupProject" xml:space="preserve">
    <value>Lancer au démarrage</value>
  </data>
  <data name="CodeExplorer_AddTemplatesSubMenu" xml:space="preserve">
    <value>Modèles</value>
  </data>
  <data name="CodeExplorer_FontSizeToolTip" xml:space="preserve">
    <value>Taille du texte</value>
  </data>
  <data name="CodeExplorer_LibraryReferences" xml:space="preserve">
    <value>Bibliothèques</value>
  </data>
  <data name="CodeExplorer_ProjectReferences" xml:space="preserve">
    <value>Projets</value>
  </data>
  <data name="CodeExplorer_SearchPlaceholder" xml:space="preserve">
    <value>Rechercher...</value>
  </data>
  <data name="CodeExplorer_SyncCodePaneToolTip" xml:space="preserve">
    <value>Synchroniser la sélection courante</value>
  </data>
  <data name="ExportError_Caption" xml:space="preserve">
    <value>Erreur lors de l'exportation de '{0}'</value>
  </data>
  <data name="RemoveError_Caption" xml:space="preserve">
    <value>Erreur lors de la suppression de '{0}'</value>
  </data>
  <data name="CodeExplorer_AddExistingFileText" xml:space="preserve">
    <value>Fichier(s) existant(s)...</value>
  </data>
  <data name="CodeExplorer_Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="CodeExplorer_Exclude" xml:space="preserve">
    <value>Exclure du projet</value>
  </data>
  <data name="ConfirmBeforeDelete_Caption" xml:space="preserve">
    <value>Confirmer la suppression</value>
  </data>
  <data name="ConfirmBeforeDelete_Prompt" xml:space="preserve">
    <value>{0} sera perdu à tout jamais.

Continuer?</value>
  </data>
  <data name="DeleteFailed_Caption" xml:space="preserve">
    <value>Échec de la suppession</value>
  </data>
  <data name="DeleteFailed_Message" xml:space="preserve">
    <value>Les fichiers suivants n'ont pas pu être supprimés:

{0}</value>
  </data>
  <data name="SyncProject" xml:space="preserve">
    <value>Synchroniser le projet</value>
  </data>
  <data name="ReplaceFromFiles" xml:space="preserve">
    <value>Remplacer le contenu des fichiers...</value>
  </data>
  <data name="CodeExplorer_ExtractInterfaceText" xml:space="preserve">
    <value>Extraire une interface...</value>
  </data>
  <data name="UpdateFromFiles" xml:space="preserve">
    <value>Remplacer le contenu du projet...</value>
  </data>
  <data name="CodeExplorer_Annotate" xml:space="preserve">
    <value>Annoter</value>
  </data>
  <data name="CodeExplorer_MoveToFolder" xml:space="preserve">
    <value>Déplacer vers le dossier...</value>
  </data>
  <data name="CodeExplorer_AppendHeader" xml:space="preserve">
    <value>Rubberduck: Déclarations - {0}</value>
  </data>
  <data name="ImportCommand_DocumentDoesNotExist" xml:space="preserve">
    <value>Aucun module document existant avec le nom '{0}'; le fichier '{1}' ne pourra pas être importé.

Échec de l'importation.</value>
  </data>
  <data name="ImportCommand_BinaryAndComponentDoNotExist" xml:space="preserve">
    <value>Le fichier binaire '{1}' associé à '{0}' est manquant, et le module cible '{2}' n'existe pas déjà dans le projet.

Échec de l'importation.</value>
  </data>
  <data name="ImportCommand_BinaryDoesNotExist" xml:space="preserve">
    <value>Le fichier '{0}' requiert le fichier binaire '{1}', qui est manquant.

Échec de l'importation.</value>
  </data>
  <data name="ImportCommand_DuplicateModule" xml:space="preserve">
    <value>Plus d'un fichier contient du code pour le componsant '{0}'.

Échec de l'importation.</value>
  </data>
  <data name="ImportCommand_OpenDialog_Filter_AllFiles" xml:space="preserve">
    <value>Tous les fichiers</value>
  </data>
  <data name="ImportCommand_OpenDialog_Filter_VBFiles" xml:space="preserve">
    <value>Fichiers VB</value>
  </data>
  <data name="ImportCommand_OpenDialog_Title" xml:space="preserve">
    <value>Importer fichiers source</value>
  </data>
  <data name="ImportCommand_UnsupportedFileExtensions" xml:space="preserve">
    <value>L'extension du fichier '{0}' n'est pas prise en charge.

Importation annulée.</value>
  </data>
  <data name="CodeExplorerWindowSettings_AccessKey" xml:space="preserve">
    <value>_Explorateur</value>
  </data>
  <data name="CodeExplorer_NavigateText" xml:space="preserve">
    <value>Naviguer</value>
  </data>
</root>