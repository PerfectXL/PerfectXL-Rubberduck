<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnnotateDeclarationDialog_AnnotationLabel" xml:space="preserve">
    <value>Anotación a Agregar:</value>
  </data>
  <data name="AnnotateDeclarationDialog_AddArgumentButtonLabel" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="AnnotateDeclarationDialog_AdjustAttributeLabel" xml:space="preserve">
    <value>Agregar/Modificar atributo</value>
  </data>
  <data name="AnnotateDeclarationDialog_ArgumentsLabel" xml:space="preserve">
    <value>Argumentos de la anotación:</value>
  </data>
  <data name="AnnotateDeclarationDialog_ArgumentTypeHeader" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="AnnotateDeclarationDialog_ArgumentValueHeader" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="AnnotateDeclarationDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Anotar Declaración</value>
  </data>
  <data name="AnnotateDeclarationDialog_DeclarationLabel" xml:space="preserve">
    <value>Declaración a Anotar:</value>
  </data>
  <data name="AnnotateDeclarationDialog_Instructions" xml:space="preserve">
    <value>Seleccione una anotación (y valores) para agregar a la declaración.</value>
  </data>
  <data name="AnnotateDeclarationDialog_RemoveArgumentButtonLabel" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="AnnotateDeclarationDialog_TitleText" xml:space="preserve">
    <value>Anotar Declaración</value>
  </data>
  <data name="AnnotationArgument_ValidationError_AttributeNameStart" xml:space="preserve">
    <value>Los argumentos de anotaciones del tipo 'Nombre de Atributo' deben comenzar con 'VB_'.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_EmptyArgument" xml:space="preserve">
    <value>Los argumentos de anotaciones no pueden estar vacíos.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_InspectionName" xml:space="preserve">
    <value>Los argumentos de anotaciones del tipo 'Nombre de Inspección' deben usar el nombre de una inspección existente.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_Newline" xml:space="preserve">
    <value>Los argumentos de anotaciones sólo pueden incluir una sóla línea.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_NotABoolean" xml:space="preserve">
    <value>Los argumentos de anotaciones del tipo 'Booleano' deben ser 'True' o 'False'.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_SpecialCharacters" xml:space="preserve">
    <value>Los argumentos de anotaciones no pueden contener caracteres de control.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_TooLong" xml:space="preserve">
    <value>Los argumentos de anotaciones no pueden tener más de {0} caracteres.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_WhitespaceInAttribute" xml:space="preserve">
    <value>Los argumentos de anotaciones del tipo 'Nombre de Atributo' no pueden contener espacios.</value>
  </data>
  <data name="AnnotationArgumentType_Inspection" xml:space="preserve">
    <value>Nombre de Inspección</value>
  </data>
  <data name="AnnotationArgumentType_Attribute" xml:space="preserve">
    <value>Atributo</value>
  </data>
  <data name="AnnotationArgumentType_Boolean" xml:space="preserve">
    <value>Booleano</value>
  </data>
  <data name="AnnotationArgumentType_Number" xml:space="preserve">
    <value>Número</value>
  </data>
  <data name="AnnotationArgumentType_Text" xml:space="preserve">
    <value>Texto</value>
  </data>
  <data name="AssignedByValDialog_NewNameAlreadyUsedFormat" xml:space="preserve">
    <value>'{0}' ya está accesible para este ámbito.</value>
  </data>
  <data name="AssignedByValDialog_MeaninglessNameFormat" xml:space="preserve">
    <value>{0} Considere utilizar otro nombre.</value>
  </data>
  <data name="AssignedByValParamQFixDialog_Caption" xml:space="preserve">
    <value>Parámetro ByVal asignado. Solución rápida: Hacer una copia local</value>
  </data>
  <data name="AssignedByValParamQFixDialog_InstructionsLabelText" xml:space="preserve">
    <value>Especifique un nombre para usar para la copia local de ByVal {0} '{1}'.</value>
  </data>
  <data name="AssignedByValParamQFixDialog_TitleText" xml:space="preserve">
    <value>Especifique el nombre de la variable de copia local</value>
  </data>
  <data name="EncapsulateField_InstructionText" xml:space="preserve">
    <value>Seleccione uno o más campos para encapsular.  Acepte los valores por default o edite los nommbres de las propiedades.</value>
  </data>
  <data name="EncapsulateField_WrapFieldsInPrivateType" xml:space="preserve">
    <value>Envolver campos en tipo Privado</value>
  </data>
  <data name="EncapsulateField_TitleText" xml:space="preserve">
    <value>Campo encapsulado</value>
  </data>
  <data name="EncapsulateField_SetterType" xml:space="preserve">
    <value>Tipo de Setter:</value>
  </data>
  <data name="EncapsulateField_ReadOnlyCheckBoxContent" xml:space="preserve">
    <value>Sólo lectura</value>
  </data>
  <data name="EncapsulateField_PropertyName" xml:space="preserve">
    <value>Nombre de la propiedad:</value>
  </data>
  <data name="EncapsulateField_PrivateUDTPropertyText" xml:space="preserve">
    <value>Crear una propiedad para cada miembro de tipo definido por el usuario</value>
  </data>
  <data name="EncapsulateField_PreviewMarker" xml:space="preserve">
    <value>'&lt;===== Propiedad y declaración cambian por encima de esta línea=====&gt;</value>
  </data>
  <data name="EncapsulateField_Preview" xml:space="preserve">
    <value>Vista previa:</value>
  </data>
  <data name="EncapsulateField_ParameterName" xml:space="preserve">
    <value>Nombre del parámetro:</value>
  </data>
  <data name="EncapsulateField_NameConflictDetected" xml:space="preserve">
    <value>Conflicto de nombres</value>
  </data>
  <data name="EncapsulateField_Caption" xml:space="preserve">
    <value>Rubberduck - Campo Encapsulado</value>
  </data>
  <data name="EncapsulateField_ArrayHasExternalRedimFormat" xml:space="preserve">
    <value>No se puede encapsular {0}. Sentencias ReDim({0}) existen en otros módulos.</value>
  </data>
  <data name="ExtractInterface_PublicInstancingMandatedByPublicClass" xml:space="preserve">
    <value>La clase que implementa es 'Public' obligando a la interfaz a ser pública también.
Si necesita una interfaz 'Private', cambie las clases que la instancian a 'Private' también.
Una clase privada puede asimismo implementar una interfaz pública.</value>
  </data>
  <data name="ExtractInterface_Caption" xml:space="preserve">
    <value>Rubberduck - Extraer interfaz</value>
  </data>
  <data name="ExtractInterface_InstancingGroupBox" xml:space="preserve">
    <value>Instanciación</value>
  </data>
  <data name="ExtractInterface_InstructionLabel" xml:space="preserve">
    <value>Por favor especificar el nombre de la interfaz y los miembros.</value>
  </data>
  <data name="ExtractInterface_MembersGroupBox" xml:space="preserve">
    <value>Miembros</value>
  </data>
  <data name="ExtractInterface_TitleLabel" xml:space="preserve">
    <value>Extraer interfaz</value>
  </data>
  <data name="ExtractMethod_ParametersLabel" xml:space="preserve">
    <value>Parámetros:</value>
  </data>
  <data name="ExtractMethod_AccessibilityLabel" xml:space="preserve">
    <value>Accesibilidad:</value>
  </data>
  <data name="ExtractMethod_Caption" xml:space="preserve">
    <value>Rubberduck - Extraer procedimiento</value>
  </data>
  <data name="ExtractMethod_InstructionsText" xml:space="preserve">
    <value>Por favor especificar el nombre del método, el tipo de retorno y/o los parámetros (si corresponde) y otras opciones.</value>
  </data>
  <data name="ExtractMethod_InvalidSelectionMessage" xml:space="preserve">
    <value>La selección actual no es válida.</value>
  </data>
  <data name="ExtractMethod_OutputNone" xml:space="preserve">
    <value>(ninguno)</value>
  </data>
  <data name="ExtractMethod_PreviewLabel" xml:space="preserve">
    <value>Vista previa:</value>
  </data>
  <data name="ExtractMethod_ReturnLabel" xml:space="preserve">
    <value>Retorno:</value>
  </data>
  <data name="ExtractMethod_SetBoxLabel" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="ExtractMethod_TitleText" xml:space="preserve">
    <value>Extraer procedimiento</value>
  </data>
  <data name="ImplementInterface_Caption" xml:space="preserve">
    <value>Rubberduck - Implementar interfaz</value>
  </data>
  <data name="ImplementInterfaceFailed_NoImplementsStatementSelected" xml:space="preserve">
    <value>No se seleccionaron implementaciones.</value>
  </data>
  <data name="IntroduceField_Caption" xml:space="preserve">
    <value>Rubberduck - Introducir campo</value>
  </data>
  <data name="PromoteToParameter_PromptIfTargetIsInterface" xml:space="preserve">
    <value>El método '{0}' implementa '{1}. {2}'. ¿Cambiar la firma de la interfaz? (Se propagará a todas las implementaciones.)</value>
  </data>
  <data name="IntroduceFieldFailed_TargetIsAlreadyAField" xml:space="preserve">
    <value>El destino '{0}' ya es un campo.</value>
  </data>
  <data name="PromoteToParameter_Caption" xml:space="preserve">
    <value>Rubberduck - Introducir Parámetro</value>
  </data>
  <data name="PromoteToParameterFailed_TargetNotContainedInMethod" xml:space="preserve">
    <value>El destino '{0}' no está contenido en un método.</value>
  </data>
  <data name="InvalidNameCriteria_IsNullOrEmpty" xml:space="preserve">
    <value>Los identificadores VBA no pueden ser nulos o de longitud cero.</value>
  </data>
  <data name="InvalidNameCriteria_DoesNotStartWithLetterFormat" xml:space="preserve">
    <value>'{0}' no comienza con una letra.</value>
  </data>
  <data name="InvalidNameCriteria_ExceedsMaximumLengthFormat" xml:space="preserve">
    <value>'{0}' excede el máximo de caracteres permitido.</value>
  </data>
  <data name="InvalidNameCriteria_InvalidCharactersFormat" xml:space="preserve">
    <value>'{0}' contiene caracteres especiales distintos al guión bajo '_'.</value>
  </data>
  <data name="InvalidNameCriteria_IsReservedKeywordFormat" xml:space="preserve">
    <value>'{0}' es una palabra reservada.</value>
  </data>
  <data name="MoveCloserToUsage_Caption" xml:space="preserve">
    <value>Rubberduck - Acercar al uso</value>
  </data>
  <data name="MoveCloserToUsageFailure_InvalidSelection" xml:space="preserve">
    <value>Selección invalida.</value>
  </data>
  <data name="MoveCloserToUsageFailure_ReferencingMethodHasSameNameDeclarationInScope" xml:space="preserve">
    <value>El método que usa '{0}' ya posee la declaración '{1}' de igual nombre en el ámbito.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetHasNoReferences" xml:space="preserve">
    <value>'{0}' no se usa en ninguna parte.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetIsInDifferentProject" xml:space="preserve">
    <value>'{0}' no está definido en el mismo proyecto que se usa.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetIsInOtherNonStandardModule" xml:space="preserve">
    <value>'{0}' no está definido en el componente que se usa ni en un módulo estándar.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetIsNonPrivateInNonStandardModule" xml:space="preserve">
    <value>'{0}' es un miembro público de una clase, formulario o documento.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetIsNotUserDefined" xml:space="preserve">
    <value>'{0}' está incorporado.</value>
  </data>
  <data name="MoveCloserToUsageFailure_TargetIsUsedInMultipleMethods" xml:space="preserve">
    <value>'{0}' tiene referencias en múltiples métodos.</value>
  </data>
  <data name="MoveFolders_SameNameSubfolder" xml:space="preserve">
    <value>La carpeta destino '{0}' ya contiene una subcarpeta '{1}'. Mover la carpeta la combinará con la carpeta existente.
¿Desea continuar?</value>
  </data>
  <data name="MoveFolderDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar una nueva carpeta padre para la subcarpeta '{0}' de '{1}'.</value>
  </data>
  <data name="MoveFolders_ControlCharacter" xml:space="preserve">
    <value>Los nombres de carpetas no pueden contener caracteres de control como, por ejemplo, saltos de línea.</value>
  </data>
  <data name="MoveFolders_EmptyFolderName" xml:space="preserve">
    <value>Una carpeta no puede estar vacía.</value>
  </data>
  <data name="MoveFolders_EmptySubfolderName" xml:space="preserve">
    <value>El nombre de las carpetas individuales no puede estar vacío.</value>
  </data>
  <data name="MoveFolders_SameNameSourceFolders" xml:space="preserve">
    <value>Se están moviendo varias carpetas con el mismo nombre. Esto las combinará en una sola.
¿Desea continuar?</value>
  </data>
  <data name="MoveFolders_SameNameSubfolders" xml:space="preserve">
    <value>La carpeta destino '{0}' ya contiene subcarpetas '{1}'. Mover las carpetas las combinará con las carpetas existentes cuyos nombres coincidan.
¿Desea continuar?</value>
  </data>
  <data name="MoveFoldersDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Mover Carpetas</value>
  </data>
  <data name="MoveFoldersDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar una nueva carpeta padre para las carpetas.</value>
  </data>
  <data name="MoveFoldersDialog_TitleText" xml:space="preserve">
    <value>Mover Carpetas</value>
  </data>
  <data name="MoveMultipleToFolderDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar nueva carpeta para los componentes.</value>
  </data>
  <data name="MoveRootFolderDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar una nueva carpeta padre para la carpeta '{0}'.</value>
  </data>
  <data name="MoveToFolderDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Mover a Carpeta</value>
  </data>
  <data name="MoveToFolderDialog_FolderLabelText" xml:space="preserve">
    <value>Carpeta:</value>
  </data>
  <data name="MoveToFolderDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar una nueva carpeta para {0} '{1}' en la carpeta '{2}'.</value>
  </data>
  <data name="MoveToFolderDialog_TitleText" xml:space="preserve">
    <value>Mover hacia carpeta</value>
  </data>
  <data name="RefactoringFailure_InvalidDeclarationType_multipleValid" xml:space="preserve">
    <value>La declaración de tipo del destino '{0}' es '{1}' en lugar de una de las esperadas '{2}'.</value>
  </data>
  <data name="Refactoring_TargetIsInterfaceMemberImplementation" xml:space="preserve">
    <value>El método '{0}' implementa '{1}. {2}'. ¿Cambiar la firma de la interfaz? (Se propagará a todas las implementaciones.)</value>
  </data>
  <data name="RefactoringFailure_AffectedModuleIsStale" xml:space="preserve">
    <value>El componente '{0}' habría sido afectado por la refactorización, pero su estado en la memoria de Rubberduck está desactualizado. Por favor actualice el estado de Rubberduck e intente de nuevo.</value>
  </data>
  <data name="RefactoringFailure_AnnotateDeclaration_InvalidType" xml:space="preserve">
    <value>La refactorización solo puede anotar componentes, miembros y variables, pero el destino tenía tipo '{0}'.</value>
  </data>
  <data name="RefactoringFailure_BaseMessage" xml:space="preserve">
    <value>Refactorización falló.</value>
  </data>
  <data name="RefactoringFailure_InvalidDeclarationType" xml:space="preserve">
    <value>La declaración de tipo del destino '{0}' es '{1}' en lugar de la esperada '{2}'.</value>
  </data>
  <data name="RefactoringFailure_NoActiveSelection" xml:space="preserve">
    <value>No existe una selección activa.</value>
  </data>
  <data name="RefactoringFailure_NoTargetDeclarationForSelection" xml:space="preserve">
    <value>No se seleccionó un destino viable.</value>
  </data>
  <data name="RefactoringFailure_NoTargetFolder" xml:space="preserve">
    <value>No se especificó un destino.</value>
  </data>
  <data name="RefactoringFailure_SuspendParserFailure" xml:space="preserve">
    <value>No se puede suspender el analizador para ejecutar la operación de refactorización.</value>
  </data>
  <data name="RefactoringFailure_TargetNotUserDefined" xml:space="preserve">
    <value>El destino no está definido por el usuario.</value>
  </data>
  <data name="RefactoringFailure_TargetNull" xml:space="preserve">
    <value>Declaración destino es nula.</value>
  </data>
  <data name="RemoveParamsDialog_RemoveIllegalSetterLetterParameter" xml:space="preserve">
    <value>No se puede eliminar el último parámetro del Setter o Letter.</value>
  </data>
  <data name="RemoveParamsDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Eliminar Parámetros</value>
  </data>
  <data name="RemoveParamsDialog_InstructionsLabelText" xml:space="preserve">
    <value>Seleccione un parámetro y haga doble clic en él o use los botones para eliminarlo o restaurarlo.</value>
  </data>
  <data name="RemoveParamsDialog_TitleText" xml:space="preserve">
    <value>Eliminar parametros</value>
  </data>
  <data name="Rename_DeclarationType" xml:space="preserve">
    <value>Renombrar {0}</value>
  </data>
  <data name="RenameDialog_AmbiguousSelection" xml:space="preserve">
    <value>Asegúrese de que se haya seleccionado exactamente 1 control antes de cambiar el nombre.</value>
  </data>
  <data name="RenameDialog_BuiltInNameError" xml:space="preserve">
    <value>{0} {1} no se puede cambiar.</value>
  </data>
  <data name="RenameDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Renombrar</value>
  </data>
  <data name="RenameDialog_ConflictingNames" xml:space="preserve">
    <value>'{0}' entra en conflicto con el nombre de la declaración existente '{1}'. Renombrar de '{2}' a '{0}' puede resultar en un código no compilable o un cambio en la lógica.
¿Desea continuar con este renombre?</value>
  </data>
  <data name="RenameDialog_DefaultRenameError" xml:space="preserve">
    <value>No se pudo renombrar {0}.</value>
  </data>
  <data name="RenameDialog_Folder" xml:space="preserve">
    <value>carpeta</value>
  </data>
  <data name="RenameDialog_FolderAlreadyExists" xml:space="preserve">
    <value>La carpeta '{0}' ya existe. Cambiar el nombre de '{1}' a '{2}' implica una combinación de carpetas.
¿Desea continuar?</value>
  </data>
  <data name="RenameDialog_FolderLabel" xml:space="preserve">
    <value>Carpeta:</value>
  </data>
  <data name="RenameDialog_FullNewFolderLabel" xml:space="preserve">
    <value>Nueva carpeta completa:</value>
  </data>
  <data name="RenameDialog_InstructionsLabelText" xml:space="preserve">
    <value>Por favor especificar un nuevo nombre para {0} '{1}'.</value>
  </data>
  <data name="RenameDialog_InterfaceRenameError" xml:space="preserve">
    <value>No se pudo renombrar el miembro de la interfaz {0}.</value>
  </data>
  <data name="RenameDialog_OnlyCasingDifferent" xml:space="preserve">
    <value>No es posible cambiar sólo mayúsculas/minúsculas de un identificador en VBA.</value>
  </data>
  <data name="RenameDialog_TitleText" xml:space="preserve">
    <value>Renombrar identificador</value>
  </data>
  <data name="RenameDialog_TitleText_Folder" xml:space="preserve">
    <value>Renombrar carpeta</value>
  </data>
  <data name="RenameFailure_StandardEventHandler" xml:space="preserve">
    <value>El destino '{0}' es un manejador de eventos estándar, el cual no puede ser renombrado.</value>
  </data>
  <data name="RenameFailure_TargetControlNotFound" xml:space="preserve">
    <value>No se encontró el control destino '{0}'.</value>
  </data>
  <data name="RenameFailure_TargetModuleWithoutCodeModule" xml:space="preserve">
    <value>No se encontró modulo para el módulo destino '{0}'.</value>
  </data>
  <data name="RenamePresenter_TargetIsControlEventHandler" xml:space="preserve">
    <value>El método '{0}' es un EventHandler para el control '{1}'. Solo el control puede ser renombrado. ¿Renombrar '{1}' en su lugar?</value>
  </data>
  <data name="RenamePresenter_TargetIsEventHandlerImplementation" xml:space="preserve">
    <value>El método '{0}' es una implementación del evento '{1}. {2}'. ¿Renombrar el evento '{2}' en su lugar?</value>
  </data>
  <data name="RenamePresenter_TargetIsInterfaceMemberImplementation" xml:space="preserve">
    <value>El método '{0}' implementa '{1}. {2}'. ¿Renombrar el miembro de la interfaz?</value>
  </data>
  <data name="RemovePresenter_NoParametersError" xml:space="preserve">
    <value>No hay parámetros en el método '{0}'.</value>
  </data>
  <data name="ReorderParamsDialog_MoveUpButtonText" xml:space="preserve">
    <value>Mover hacia arriba</value>
  </data>
  <data name="ReorderParamsDialog_Caption" xml:space="preserve">
    <value>Rubberduck - Reordenar Parámetros</value>
  </data>
  <data name="ReorderParamsDialog_InstructionsLabelText" xml:space="preserve">
    <value>Seleccione un parámetro y arrástrelo o use los botones para moverlo hacia arriba o hacia abajo.</value>
  </data>
  <data name="ReorderParamsDialog_MoveDownButtonText" xml:space="preserve">
    <value>Mover hacia abajo</value>
  </data>
  <data name="ReorderParamsDialog_TitleText" xml:space="preserve">
    <value>Reordenar parametros</value>
  </data>
  <data name="ReorderPresenter_LessThanTwoParametersError" xml:space="preserve">
    <value>Menos de dos parámetros en el método '{0}'.</value>
  </data>
  <data name="AnnotationArgument_ValidationError_NotANumber" xml:space="preserve">
    <value>Los argumentos de anotaciones del tipo 'Número' deben ser un numero válido entero o en formato de punto flotante.</value>
  </data>
  <data name="ReorderPresenter_OptionalParametersMustBeLastError" xml:space="preserve">
    <value>Los parámetros opcionales deben especificarse al final de la lista de parámetros.</value>
  </data>
  <data name="MoveCloserToUsageDialog_InstructionsLabelText" xml:space="preserve">
    <value>Seleccione el nuevo tipo de declaración para '{0}'.</value>
  </data>
  <data name="ExtractMethod_CompilationDirectivesWarning" xml:space="preserve">
    <value>El código seleccionado contiene directivas del compilador. Extraer este código puede causar errores.</value>
  </data>
  <data name="MoveCloserToUsageDialog_TitleText" xml:space="preserve">
    <value>Seleccione la declaración</value>
  </data>
  <data name="ExtractInterface_OptionReplaceMembersWithInterfaceMembers" xml:space="preserve">
    <value>Reemplace los miembros con miembros de la interfaz</value>
  </data>
  <data name="ExtractInterface_OptionForwardToObjectMembers" xml:space="preserve">
    <value>Reenvíe llamadas de miembros de interfaz a miembros de objeto</value>
  </data>
  <data name="ExtractInterface_OptionForwardToInterfaceMembers" xml:space="preserve">
    <value>Reenvíe llamadas de miembros de objeto a miembros de interfaz</value>
  </data>
  <data name="ExtractInterface_OptionAddEmptyImplementation" xml:space="preserve">
    <value>Agregue una implementación vacía</value>
  </data>
  <data name="ExtractInterface_ImplementationOptionsGroupBox" xml:space="preserve">
    <value>Opciones de Implementación</value>
  </data>
  <data name="ExtractMethod_NoneSelected" xml:space="preserve">
    <value>(ninguno)</value>
  </data>
  <data name="ExtractInterface_Public" xml:space="preserve">
    <value>Público</value>
  </data>
  <data name="ExtractInterface_Private" xml:space="preserve">
    <value>Privado</value>
  </data>
  <data name="ExtractMethod_ParameterDataTypeColumnHeader" xml:space="preserve">
    <value>Tipo de dato</value>
  </data>
</root>