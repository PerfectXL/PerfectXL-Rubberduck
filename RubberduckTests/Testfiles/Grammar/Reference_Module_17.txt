Attribute VB_Name = "vbXlPivotTablePri"
Option Explicit
Option Private Module

Private Const ThisModule As String = ThisProject & "|vbXlPivotTablePri"

Public Function GetPivotTableOrNothing(PivotTables As Excel.PivotTables, Index As Variant) As Excel.PivotTable
    Const ThisProcedure As String = ThisModule & "|GetPivotTableOrNothing|Function"
    On Error Resume Next
    Set GetPivotTableOrNothing = PivotTables.Item(Index:=Index)
End Function

Public Function GetPivotTablesOrNothing(Worksheet As Excel.Worksheet) As Excel.PivotTables
    Const ThisProcedure As String = ThisModule & "|GetPivotTablesOrNothing|Function"
    On Error Resume Next
    Set GetPivotTablesOrNothing = Worksheet.PivotTables
End Function

Public Function GetPivotTableOrNothingFromChart(Chart As Excel.Chart) As Excel.PivotTable
    Const ThisProcedure As String = ThisModule & "|GetPivotTableOrNothingFromChart|Function"

    With Chart
        If Not .PivotLayout Is Nothing Then
            Set GetPivotTableOrNothingFromChart = .PivotLayout.PivotTable
        End If
    End With
End Function

Public Function GetPivotTableOrNothingFromRange(Range As Excel.Range) As Excel.PivotTable
    Const ThisProcedure As String = ThisModule & "|GetPivotTableOrNothingFromRange|Function"
    On Error Resume Next
    Set GetPivotTableOrNothingFromRange = Range.PivotTable
End Function

Public Function IsPivotTablePivotTable(PivotTable1 As Excel.PivotTable, PivotTable2 As Excel.PivotTable) As Boolean
    Const ThisProcedure As String = ThisModule & "|IsPivotTablePivotTable|Function"
    Dim lcWorksheet1 As Excel.Worksheet
    Dim lcWorksheet2 As Excel.Worksheet

    If Not PivotTable1 Is Nothing And Not PivotTable2 Is Nothing Then
        Set lcWorksheet1 = PivotTable1.Parent
        Set lcWorksheet2 = PivotTable2.Parent
        'Debug.Print lcWorksheet1.Name, lcWorksheet2.Name
        IsPivotTablePivotTable = VBA.CBool(lcWorksheet1 Is lcWorksheet2 And PivotTable1.Name = PivotTable2.Name)
    End If
End Function

'Private Sub GetPivotTableDataRangeTest()
'    'Debug.Print GetPivotTableDataRange(Range("A24").PivotTable).Address
'End Sub
'Public Function GetPivotTableDataRange(PivotTable As Excel.PivotTable) As Excel.Range
'    Dim lcColumnDataRange As Excel.Range
'    Dim lcRowDataRange As Excel.Range
'
'    On Error GoTo CatchError
'
'    Set lcRowDataRange = GetPivotTableRowDataRange(PivotTable:=PivotTable)
'    Set lcColumnDataRange = GetPivotTableColumnDataRange(PivotTable:=PivotTable)
'
'    If lcColumnDataRange Is Nothing Then
'        Set GetPivotTableDataRange = lcRowDataRange
'
'    ElseIf lcRowDataRange Is Nothing Then
'        Set GetPivotTableDataRange = lcColumnDataRange
'
'    Else
'        Set GetPivotTableDataRange = GetIntersectOrNothing(Range1:=lcColumnDataRange _
'                                                         , Range2:=lcRowDataRange _
'                                                         )
'    End If
'
'    Set lcColumnDataRange = Nothing
'    Set lcRowDataRange = Nothing
'
'    Exit Function
'
'CatchError:
'    ReraiseError
'End Function

Private Sub GetPivotTableDataRangeTest()
    Const ThisProcedure As String = ThisModule & "|GetPivotTableDataRangeTest|Sub"
Debug.Print GetPivotTableDataRange(ActiveCell.PivotTable).Address
End Sub
Public Function GetPivotTableDataRange(PivotTable As Excel.PivotTable) As Excel.Range
    Const ThisProcedure As String = ThisModule & "|GetPivotTableDataRange|Function"
    Dim lcColumnDataRange As Excel.Range
    Dim lcRowDataRange As Excel.Range

    Set lcRowDataRange = GetPivotTableRowDataRange(PivotTable:=PivotTable)
    Set lcColumnDataRange = GetPivotTableColumnDataRange(PivotTable:=PivotTable)

    If lcColumnDataRange Is Nothing Then
        Set GetPivotTableDataRange = lcRowDataRange

    ElseIf lcRowDataRange Is Nothing Then
        Set GetPivotTableDataRange = lcColumnDataRange

    Else
        Set GetPivotTableDataRange = GetIntersectOrNothing(Range1:=lcColumnDataRange _
                                                         , Range2:=lcRowDataRange _
                                                         )
    End If

    Set lcColumnDataRange = Nothing
    Set lcRowDataRange = Nothing
End Function

'Private Sub GetPivotTableColumnDataRangeTest()
'    'Debug.Print GetPivotTableColumnDataRange(Range("A30").PivotTable).Address
'End Sub
'Public Function GetPivotTableColumnDataRange(PivotTable As Excel.PivotTable) As Excel.Range
'    Dim lcPivotField As Excel.PivotField
'    Dim lcPivotFields As Excel.PivotFields
'    Dim lcPivotItems As Excel.PivotItems
'
'    On Error GoTo CatchError
'
'    Set lcPivotFields = PivotTable.DataFields
'    If lcPivotFields.Count = Lo0 Then
'        Exit Function
'    End If
'
'    Set lcPivotFields = PivotTable.ColumnFields
'    If lcPivotFields.Count = Lo0 Then
'        Exit Function
'    End If
'
'    Set lcPivotField = GetPivotFieldOrNothingWithHighestPosition(PivotFields:=lcPivotFields _
'                                                               , PivotFieldOrientation:=XlPivotFieldOrientation.xlColumnField _
'                                                               )
'
'    If Not lcPivotField Is Nothing Then
'        Set lcPivotItems = lcPivotField.PivotItems
'        If Not lcPivotItems Is Nothing Then
'            Set GetPivotTableColumnDataRange = GetPivotItemsDataRange(PivotItems:=lcPivotField.PivotItems).EntireColumn
'        End If
'    End If
'
'    Exit Function
'
'CatchError:
'    ReraiseError
'End Function

Private Sub GetPivotTableColumnDataRangeTest()
    Const ThisProcedure As String = ThisModule & "|GetPivotTableColumnDataRangeTest|Sub"
Debug.Print GetPivotTableColumnDataRange(Range("g2").PivotTable).Address
End Sub
Public Function GetPivotTableColumnDataRange(PivotTable As Excel.PivotTable) As Excel.Range
    Const ThisProcedure As String = ThisModule & "|GetPivotTableColumnDataRange|Function"
    Dim lcPivotFields As Excel.PivotFields

    Set lcPivotFields = PivotTable.DataFields
    If lcPivotFields.Count = Lo0 Then
        Exit Function
    End If

    Set lcPivotFields = PivotTable.ColumnFields
    If lcPivotFields.Count = Lo0 Then
        Exit Function
    End If

    Set GetPivotTableColumnDataRange = GetPivotAxisColumnDataRange(PivotTable:=PivotTable).EntireColumn
End Function

'Private Sub GetPivotTableRowDataRangeTest()
'    'Debug.Print GetPivotTableRowDataRange(Range("A30").PivotTable).Address
'End Sub
'Public Function GetPivotTableRowDataRange(PivotTable As Excel.PivotTable) As Excel.Range
'    Dim lcDataRange As Excel.Range
'    Dim lcPivotField As Excel.PivotField
'    Dim lcPivotFields As Excel.PivotFields
'    Dim lcPivotItem As Excel.PivotItem
'    Dim lcPivotItems As Excel.PivotItems
'
'    On Error GoTo CatchError
'
'    Set lcPivotFields = PivotTable.DataFields
'    If lcPivotFields.Count = Lo0 Then
'        Exit Function
'    End If
'
'    Set lcPivotFields = PivotTable.RowFields
'    If lcPivotFields.Count = Lo0 Then
'        Exit Function
'    End If
'
'    Set lcPivotField = GetPivotFieldOrNothingWithHighestPosition(PivotFields:=lcPivotFields _
'                                                               , PivotFieldOrientation:=XlPivotFieldOrientation.xlRowField _
'                                                               )
'    Set GetPivotTableRowDataRange = GetPivotItemsDataRange(PivotItems:=lcPivotField.PivotItems).EntireRow
'
'    Exit Function
'
'CatchError:
'    ReraiseError
'End Function

Private Sub GetPivotTableRowDataRangeTest()
    Const ThisProcedure As String = ThisModule & "|GetPivotTableRowDataRangeTest|Sub"
Debug.Print GetPivotTableRowDataRange(Range("g2").PivotTable).Address
End Sub
Public Function GetPivotTableRowDataRange(PivotTable As Excel.PivotTable) As Excel.Range
    Const ThisProcedure As String = ThisModule & "|GetPivotTableRowDataRange|Function"
    Dim lcPivotFields As Excel.PivotFields

    Set lcPivotFields = PivotTable.DataFields
    If lcPivotFields.Count = Lo0 Then
        Exit Function
    End If

    Set lcPivotFields = PivotTable.RowFields
    If lcPivotFields.Count = Lo0 Then
        Exit Function
    End If

    Set GetPivotTableRowDataRange = GetPivotAxisRowDataRange(PivotTable:=PivotTable).EntireRow
End Function

Public Function GetPivotTableDataFieldPositionInPivotColumnFields(PivotTable As Excel.PivotTable) As Long
    Const ThisProcedure As String = ThisModule & "|GetPivotTableDataFieldPositionInPivotColumnFields|Function"
    Dim lcDataPivotItems As Excel.PivotItems

    With PivotTable.DataPivotField
        Set lcDataPivotItems = .PivotItems
        If lcDataPivotItems.Count > Lo1 Then
            ' nur dann gibt's ein Werte-Feld in den ColumnFields
            GetPivotTableDataFieldPositionInPivotColumnFields = .Position
        End If
        Set lcDataPivotItems = Nothing
    End With
End Function

Private Sub GetPivotTablePivotChartsDictionaryTest()
    Const ThisProcedure As String = ThisModule & "|GetPivotTablePivotChartsDictionaryTest|Sub"
Debug.Print GetPivotTablePivotChartsDictionary(ActiveCell.PivotTable).Count
End Sub
Public Function GetPivotTablePivotChartsDictionary(PivotTable As Excel.PivotTable) As Scripting.Dictionary
    Const ThisProcedure As String = ThisModule & "|GetPivotTablePivotChartsDictionary|Function"
    Dim lcChart As Excel.Chart
    Dim lcChartObject As Excel.ChartObject
    Dim lcDictionary As Scripting.Dictionary
    Dim lcWorkbook As Excel.Workbook
    Dim lcWorksheet As Excel.Worksheet

    Set lcDictionary = New Scripting.Dictionary

    Set lcWorksheet = PivotTable.Parent
    Set lcWorkbook = lcWorksheet.Parent

    For Each lcChart In lcWorkbook.Charts
        If Not lcChart.PivotLayout Is Nothing Then
            If IsPivotTablePivotTable(PivotTable1:=lcChart.PivotLayout.PivotTable, PivotTable2:=PivotTable) Then
                lcDictionary.Add Key:=VBA.ObjPtr(lcChart), Item:=lcChart
            End If
        End If
    Next
    For Each lcWorksheet In lcWorkbook.Worksheets
        For Each lcChartObject In lcWorksheet.ChartObjects
            With lcChartObject.Chart
                If Not .PivotLayout Is Nothing Then
                    If IsPivotTablePivotTable(PivotTable1:=.PivotLayout.PivotTable, PivotTable2:=PivotTable) Then
                        lcDictionary.Add Key:=VBA.ObjPtr(lcChartObject.Chart), Item:=lcChartObject.Chart
                    End If
                End If
            End With
        Next
    Next

    Set GetPivotTablePivotChartsDictionary = lcDictionary
End Function
